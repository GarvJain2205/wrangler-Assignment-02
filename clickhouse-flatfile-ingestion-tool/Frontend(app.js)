import React, { useState } from "react";
import axios from "axios";

function App() {
  const [sourceType, setSourceType] = useState("ClickHouse");
  const [host, setHost] = useState("");
  const [port, setPort] = useState(8443);
  const [database, setDatabase] = useState("");
  const [user, setUser] = useState("");
  const [jwtToken, setJwtToken] = useState("");
  const [table, setTable] = useState("");
  const [columns, setColumns] = useState([]);
  const [selectedColumns, setSelectedColumns] = useState([]);
  const [csvPath, setCsvPath] = useState("");
  const [delimiter, setDelimiter] = useState(",");

  const [status, setStatus] = useState("Idle");
  const [result, setResult] = useState("");

  const handleIngest = async () => {
    setStatus("Ingesting...");
    try {
      const response = await axios.post("http://localhost:8080/api/ingest/clickhouse-to-csv", {
        host,
        port,
        database,
        user,
        jwtToken,
        table,
        columns: selectedColumns,
        csvPath,
        delimiter
      });

      setResult(response.data);
      setStatus("Completed");
    } catch (err) {
      setStatus("Error");
      setResult(err.response?.data || err.message);
    }
  };

  const handleColumnCheck = (col) => {
    setSelectedColumns(prev =>
      prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]
    );
  };

  return (
    <div className="p-6 max-w-3xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">Data Ingestion Tool</h1>

      <label className="block mb-2">Source Type</label>
      <select
        value={sourceType}
        onChange={(e) => setSourceType(e.target.value)}
        className="border p-2 mb-4 w-full"
      >
        <option>ClickHouse</option>
        <option>CSV</option>
      </select>

      {sourceType === "ClickHouse" && (
        <>
          <input className="input" placeholder="Host" value={host} onChange={e => setHost(e.target.value)} />
          <input className="input" placeholder="Port" type="number" value={port} onChange={e => setPort(e.target.value)} />
          <input className="input" placeholder="Database" value={database} onChange={e => setDatabase(e.target.value)} />
          <input className="input" placeholder="User" value={user} onChange={e => setUser(e.target.value)} />
          <input className="input" placeholder="JWT Token" value={jwtToken} onChange={e => setJwtToken(e.target.value)} />
          <input className="input" placeholder="Table" value={table} onChange={e => setTable(e.target.value)} />

          <div className="mb-4">
            <label className="block mb-1">Select Columns (mocked for now)</label>
            {["col1", "col2", "col3"].map(col => (
              <div key={col}>
                <input
                  type="checkbox"
                  checked={selectedColumns.includes(col)}
                  onChange={() => handleColumnCheck(col)}
                />
                <span className="ml-2">{col}</span>
              </div>
            ))}
          </div>
        </>
      )}

      <input className="input" placeholder="CSV Output Path" value={csvPath} onChange={e => setCsvPath(e.target.value)} />
      <input className="input" placeholder="Delimiter" value={delimiter} onChange={e => setDelimiter(e.target.value)} />

      <button className="bg-blue-600 text-white px-4 py-2 rounded mt-4" onClick={handleIngest}>
        Start Ingestion
      </button>

      <div className="mt-4">
        <strong>Status:</strong> {status}
      </div>
      <div className="mt-2 text-green-700">{result}</div>
    </div>
  );
}

export default App;
